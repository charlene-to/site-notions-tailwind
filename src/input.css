/* src/input.css (Correction pour Tailwind CSS v4) */

@import "tailwindcss";
/* Typo */
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@200..700&display=swap');


/*@layer base : Contient les styles de réinitialisation et de fondation (prio faible, style par défaut )*/

/* @layer components : Contient vos styles réutilisables. C'est le lieu idéal pour les classes personnalisées complexes 
(comme .btn-primaire ou .carte-produit) 
C'est l'endroit où vous utilisez principalement la directive @apply. */

/* @layer utilities : c'est le résutlat final (prio élévé par rapport à components) : 
Contient toutes les classes utilitaires atomiques (configurer dans theme)
(le cœur de Tailwind, comme bg-red-500, p-4, etc.). */


/* @theme { ... } est réservé exclusivement à la configuration 
et aux variables ex : (couleurs, espacements, tailles, etc.)
(écrites en JavaScript/tokens CSS - définit les valeurs (les tokens) que Tailwind utilise  */
@theme {
      --color-surface-primary : #1F2729; 
      --color-accent : #64D297;
      --color-accent-hover : #0f4c5c;
      
     /* Palette Menu */ 
     --color-brand-bkg : #FFCB77;
     --color-brand-darker-bkg : #ee964b;
     --color-brand-typo : #FE6D73 ;
     --color-brand-darker-typo : #ff595e;
     --color-brand-size : #17C3B2 ;
     --color-brand-darker-size : #588b8b;
     --color-brand-layout : #62b6cb ;
     --color-brand-darker-layout : #457b9d  ;
     --color-brand-flexbox : #227C9D;
     --color-brand-darker-flexbox :#014f86 ;
     --color-brand-grid : #1d2d44;
     --color-brand-darker-grid : #101828;
     --color-brand-custom : #3d348b;
     --color-brand-darker-custom : #3c096c;
     --color-brand-animation : #7678ed;
     --color-brand-darker-animation : #6a4c93;

      /* Dégradé personnalisé à partir du menu */
    --bg-gradient-brand-bkg: linear-gradient(0deg, #FFCB77 0%, #FDBB2D 100%);

     /* Font  */ 
    --font-body-primary: "Roboto", sans-serif;
      --font-body-secondary: "Oswald", sans-serif; 

    /* Définition des utilitaires d'animation */
    --animate-wiggle: wiggle 1s ease-in-out infinite;
    --animate-grow: grow 1s ease-in-out infinite;
    --animate-fadeIn: fadeIn 1s linear forwards;
    --animate-fadeInS: fadeIn 3s linear forwards;
    --animate-fadeInSs: fadeIn 5s linear forwards;
    --animate-fadeOut: fadeOut 10s linear forwards;

    /* Définition des keyframes (syntaxe CSS standard) */
    @keyframes wiggle {
        0%, 100% { transform: rotate(-3deg); }
        50% { transform: rotate(3deg); }
    }

    @keyframes grow {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.1); }
    }

    @keyframes fadeIn {
        0%, 70% { opacity: 0; }
        100% { opacity: 1; }
    }

    @keyframes fadeOut {
        0%, 70% { opacity: 1; }
        100% { opacity: 0; }
    }
} /* Fin de thèmme */

/* @layer fournit les règles d'application au navigateur.*/
/* @layer components : Contient vos styles réutilisables. 
C'est le lieu idéal pour les classes personnalisées complexes*/
@layer components {
    .myContainerQueries {
        container-type: inline-size;
        container-name: testTitleAccent test2FireBrick; /* Définition du nom */
       
    }
    .mon-conteneur-test {
        container-type: inline-size;
        container-name: testTitleAccent test2FireBrick; /* Définition du nom */
       
    }
}

/*  Cette règle s'applique UNIQUEMENT quand la largeur du conteneur 'test1' est entre 320px et 767px.  */
@container testTitleAccent (min-width: 320px) and (max-width: 767px)  {
     .myContainerQueries h2{ 
         color : #64D297  ; /* Style appliqué si la requête est vraie */
    }
}
/* L'élément ne dépassera jamais 300 pixels de large. */
@container test2 (max-width: 300px) {
     .mon-conteneur-test  { 
        background-color: firebrick ; /* Style appliqué si la requête est vraie */
    }
    .mon-conteneur-test p { 
        font-size: 1.5rem; /* Style appliqué si la requête est vraie */
    }
}

/* Créer mon 1er btn-primary */
@layer components {
    .btn-primary {
        /* On applique toutes les utilitaires pour construire l'apparence */
        @apply bg-blue-600 
               hover:bg-blue-700 
               text-white 
               font-bold 
               py-3 
               px-6 
               rounded-lg 
               shadow-md;
    }

    .btn-primary-outline {
        /* On peut aussi créer des variantes ! */
        @apply border border-blue-600 text-blue-600 hover:bg-blue-100 py-3 px-6 rounded-lg;
    }
}

/* Créer mon btn-primary avec mes couleurs branding */
@layer components {
  .btn-accent {
    /* Utilise les utilitaires pour la structure */
    @apply text-white font-bold py-3 px-6 rounded-lg shadow-md transition-colors duration-300; 

    /* Utilise la variable CSS pour la couleur de fond normale */
    background-color: var(--color-accent);
  }

  .btn-accent:hover {
    /* Utilise la variable CSS pour la couleur de fond au survol */
    background-color: var(--color-accent-hover);
  }
}